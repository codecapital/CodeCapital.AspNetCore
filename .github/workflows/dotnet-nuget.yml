name: .NET Build and Publish Nuget

on:
  workflow_dispatch:
#  push:
#    branches: [ main ]
#  pull_request:
#    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 7.0.x
        include-prerelease: true
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal

    - name: Publish ConfigurationJson
      uses: alirezanet/publish-nuget@v3.0.1
      with:
        PROJECT_FILE_PATH: src/CodeCapital.AspNetCore.Extensions.Configuration.Json/CodeCapital.AspNetCore.Extensions.Configuration.Json.csproj
        NUGET_KEY: ${{secrets.NUGET_API_KEY}}

    - name: Publish Renderer
      uses: alirezanet/publish-nuget@v3.0.1
      with:
        PROJECT_FILE_PATH: src/CodeCapital.AspNetCore.Mvc.Renderer/CodeCapital.AspNetCore.Mvc.Renderer.csproj
        NUGET_KEY: ${{secrets.NUGET_API_KEY}}

    - name: Publish TagHelpers
      uses: alirezanet/publish-nuget@v3.0.1
      with:
        PROJECT_FILE_PATH: src/CodeCapital.AspNetCore.Mvc.TagHelpers/CodeCapital.AspNetCore.Mvc.TagHelpers.csproj
        NUGET_KEY: ${{secrets.NUGET_API_KEY}}

    - name: Publish Services
      uses: alirezanet/publish-nuget@v3.0.1
      with:
        PROJECT_FILE_PATH: src/CodeCapital.Services/CodeCapital.Services.csproj
        NUGET_KEY: ${{secrets.NUGET_API_KEY}}

    - name: Publish RazorLibrary
      uses: alirezanet/publish-nuget@v3.0.1
      with:
        PROJECT_FILE_PATH: src/CodeCapital.AspNetCore.RazorLibrary/CodeCapital.AspNetCore.RazorLibrary.csproj
        NUGET_KEY: ${{secrets.NUGET_API_KEY}}

    - name: Publish Flattener
      uses: alirezanet/publish-nuget@v3.0.1
      with:
        PROJECT_FILE_PATH: src/CodeCapital.System.Text.Json/CodeCapital.System.Text.Json.csproj
        NUGET_KEY: ${{secrets.NUGET_API_KEY}}
